// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// murmur3hash
SEXP murmur3hash(SEXP x);
RcppExport SEXP _mlvocab_murmur3hash(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(murmur3hash(x));
    return rcpp_result_gen;
END_RCPP
}
// C_vocab
DataFrame C_vocab(const ListOf<const CharacterVector>& corpus, const DataFrame& oldvocab);
RcppExport SEXP _mlvocab_C_vocab(SEXP corpusSEXP, SEXP oldvocabSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const ListOf<const CharacterVector>& >::type corpus(corpusSEXP);
    Rcpp::traits::input_parameter< const DataFrame& >::type oldvocab(oldvocabSEXP);
    rcpp_result_gen = Rcpp::wrap(C_vocab(corpus, oldvocab));
    return rcpp_result_gen;
END_RCPP
}
// C_corpus2ixseq
List C_corpus2ixseq(const ListOf<const CharacterVector>& corpus, const DataFrame& vocabdf, bool keep_unknown, int unknown_buckets);
RcppExport SEXP _mlvocab_C_corpus2ixseq(SEXP corpusSEXP, SEXP vocabdfSEXP, SEXP keep_unknownSEXP, SEXP unknown_bucketsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const ListOf<const CharacterVector>& >::type corpus(corpusSEXP);
    Rcpp::traits::input_parameter< const DataFrame& >::type vocabdf(vocabdfSEXP);
    Rcpp::traits::input_parameter< bool >::type keep_unknown(keep_unknownSEXP);
    Rcpp::traits::input_parameter< int >::type unknown_buckets(unknown_bucketsSEXP);
    rcpp_result_gen = Rcpp::wrap(C_corpus2ixseq(corpus, vocabdf, keep_unknown, unknown_buckets));
    return rcpp_result_gen;
END_RCPP
}
// C_corpus2ixmat
IntegerMatrix C_corpus2ixmat(const ListOf<const CharacterVector>& corpus, const DataFrame& vocabdf, int maxlen, bool pad_right, bool trunc_right, bool keep_unknown, int unknown_buckets);
RcppExport SEXP _mlvocab_C_corpus2ixmat(SEXP corpusSEXP, SEXP vocabdfSEXP, SEXP maxlenSEXP, SEXP pad_rightSEXP, SEXP trunc_rightSEXP, SEXP keep_unknownSEXP, SEXP unknown_bucketsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const ListOf<const CharacterVector>& >::type corpus(corpusSEXP);
    Rcpp::traits::input_parameter< const DataFrame& >::type vocabdf(vocabdfSEXP);
    Rcpp::traits::input_parameter< int >::type maxlen(maxlenSEXP);
    Rcpp::traits::input_parameter< bool >::type pad_right(pad_rightSEXP);
    Rcpp::traits::input_parameter< bool >::type trunc_right(trunc_rightSEXP);
    Rcpp::traits::input_parameter< bool >::type keep_unknown(keep_unknownSEXP);
    Rcpp::traits::input_parameter< int >::type unknown_buckets(unknown_bucketsSEXP);
    rcpp_result_gen = Rcpp::wrap(C_corpus2ixmat(corpus, vocabdf, maxlen, pad_right, trunc_right, keep_unknown, unknown_buckets));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mlvocab_murmur3hash", (DL_FUNC) &_mlvocab_murmur3hash, 1},
    {"_mlvocab_C_vocab", (DL_FUNC) &_mlvocab_C_vocab, 2},
    {"_mlvocab_C_corpus2ixseq", (DL_FUNC) &_mlvocab_C_corpus2ixseq, 4},
    {"_mlvocab_C_corpus2ixmat", (DL_FUNC) &_mlvocab_C_corpus2ixmat, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_mlvocab(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
